[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools",
  "wheel"
]

[project]
name = "is-it-bin-day"
version = "0.2.0"
description = "More useful task list"
authors = [
  { email = "bengosney@googlemail.com", name = "Ben Gosney" },
]
# [[[cog
# import cog
# with open(".python-version") as f:
#   version = f.read().strip()
# cog.outl(f"requires-python = \">={version}\"")
# ]]]
requires-python = ">=3.13"
# [[[end]]] (sum: zX38HHIAaw)


classifiers = [
  # [[[cog
  # cog.outl(f"\"Programming Language :: Python :: {version.split('.')[0]} :: Only\",")
  # cog.outl(f"\"Programming Language :: Python :: {version}\",")
  # ]]]
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  # [[[end]]] (sum: +TEs55lieZ)
]
dependencies = [
  "boto3",
  "couchdb",
  "dj-database-url",
  "django",
  "django-admin-sortable2",
  "django-appconf",
  "django-cors-headers",
  "django-cryptography-django5",
  "django-environ",
  "django-extensions",
  "django-fsm-2",
  "django-fsm-admin2",
  "django-fsm-log",
  "django-model-utils",
  "django-oso",
  "django-storages",
  "djangorestframework",
  "djangorestframework-simplejwt",
  "djangorestframework-stubs",
  "googletrans",
  "gunicorn",
  "minestrone",
  "openfoodfacts",
  "pillow",
  "pint",
  "psycopg2",
  "pyyaml",
  "ratelimit",
  "recurrent",
  "requests",
  "uritemplate",
  "whitenoise[brotli]",
]

optional-dependencies.dev = [
  "cogapp",
  "commitizen",
  "django-browser-reload",
  "django-debug-toolbar",
  "django-stubs",
  "djangorestframework-stubs",
  "faker",
  "fluentcheck",
  "freezegun",
  "icecream",
  "model-bakery",
  "mypy",
  "packaging",
  "pre-commit",
  "pytest",
  "pytest-check",
  "pytest-clarity",
  "pytest-cov",
  "pytest-deadfixtures",
  "pytest-django",
  "pytest-django-queries",
  "pytest-freezegun",
  "pytest-mock",
  "pytest-picked",
  "ruff",
  "setuptools",
  "uv",
  "validate-pyproject[all]",
]

[tool.black]
line-length = 128
# [[[cog
# cog.outl(f"target-version = [ 'py{version.replace('.','')}' ]")
# ]]]
target-version = [ 'py313' ]
# [[[end]]] (sum: DHp514q0e+)


[tool.ruff]
# [[[cog
# cog.outl(f"target-version = \"py{version.replace('.','')}\"")
# ]]]
target-version = "py313"
# [[[end]]] (sum: fumyurh2XM)
line-length = 120
exclude = [
  "migrations",
]

lint.select = [
  "C90",
  "DJ",
  "E4",
  "E7",
  "E9",
  "F",
  "N",
  "UP",
]

[tool.pycln]
all = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
